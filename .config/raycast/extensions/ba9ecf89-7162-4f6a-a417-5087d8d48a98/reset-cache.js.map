{
  "version": 3,
  "sources": ["../src/reset-cache.ts", "../src/v8/utils.ts"],
  "sourcesContent": ["import { showToast, Toast } from \"@raycast/api\";\nimport { clearCache, op } from \"./v8/utils\";\n\nexport default async function resetCache() {\n  const toast = await showToast({\n    style: Toast.Style.Animated,\n    title: \"Clearing cache...\",\n  });\n\n  try {\n    clearCache();\n    op([\"signout\", \"--all\"]);\n    toast.style = Toast.Style.Success;\n    toast.title = \"Cleared cache\";\n  } catch (error) {\n    toast.style = Toast.Style.Failure;\n    toast.title = \"Failed to clear cache\";\n    if (error instanceof Error) {\n      toast.message = error.message;\n    }\n  }\n}\n", "import { Cache, getPreferenceValues, Icon } from \"@raycast/api\";\n\nimport { execFileSync } from \"child_process\";\nimport { existsSync } from \"fs\";\nimport { useEffect, useState } from \"react\";\n\nimport { CategoryName } from \"./types\";\n\nexport type Preferences = {\n  cliPath: string;\n  version: \"v7\" | \"v8\";\n};\n\nexport const cache = new Cache();\n\nexport const CLI_PATH =\n  getPreferenceValues<Preferences>().cliPath ||\n  [\"/usr/local/bin/op\", \"/opt/homebrew/bin/op\"].find((path) => existsSync(path));\nexport const CATEGORIES_CACHE_NAME = \"@categories\";\nexport const ITEMS_CACHE_NAME = \"@items\";\nexport const ACCOUNT_CACHE_NAME = \"@account\";\n\nexport function op(args: string[]) {\n  if (CLI_PATH) {\n    const stdout = execFileSync(CLI_PATH, args);\n    return stdout.toString();\n  }\n  throw Error(\"1Password CLI is not found!\");\n}\n\nexport function useOp<T>(args: string[], cacheKey?: string) {\n  const [data, setData] = useState<T>();\n  const [error, setError] = useState<unknown>();\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (cacheKey && cache.has(cacheKey)) {\n      setIsLoading(false);\n      return setData(JSON.parse(cache.get(cacheKey) as string));\n    }\n\n    try {\n      const items = op([...args, \"--format=json\"]);\n\n      if (cacheKey) {\n        cache.set(cacheKey, items);\n        return setData(JSON.parse(cache.get(cacheKey) as string));\n      }\n      return setData(JSON.parse(items));\n    } catch (error: unknown) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [cacheKey]);\n\n  return { data, error, isLoading };\n}\n\nexport function clearCache(key?: string) {\n  if (!cache.isEmpty) {\n    if (key && cache.has(key)) {\n      cache.remove(key);\n    } else {\n      cache.clear({ notifySubscribers: false });\n    }\n  }\n}\n\nexport function getCategoryIcon(category: CategoryName) {\n  switch (category) {\n    case \"API_CREDENTIAL\":\n      return Icon.Code;\n    case \"CREDIT_CARD\":\n      return Icon.CreditCard;\n    case \"CRYPTO_WALLET\":\n      return Icon.Crypto;\n    case \"BANK_ACCOUNT\":\n    case \"CUSTOM\":\n      return Icon.Wallet;\n    case \"DATABASE\":\n      return Icon.HardDrive;\n    case \"DOCUMENT\":\n      return Icon.Document;\n    case \"DRIVER_LICENSE\":\n      return Icon.Car;\n    case \"EMAIL_ACCOUNT\":\n      return Icon.Envelope;\n    case \"IDENTITY\":\n      return Icon.Person;\n    case \"LOGIN\":\n      return Icon.Fingerprint;\n    case \"MEDICAL_RECORD\":\n      return Icon.Heartbeat;\n    case \"MEMBERSHIP\":\n      return Icon.StarCircle;\n    case \"OUTDOOR_LICENSE\":\n      return Icon.Tree;\n    case \"PASSPORT\":\n      return Icon.Globe;\n    case \"PASSWORD\":\n      return Icon.Key;\n    case \"REWARD_PROGRAM\":\n      return Icon.Gift;\n    case \"SECURE_NOTE\":\n      return Icon.Lock;\n    case \"SOCIAL_SECURITY_NUMBER\":\n      return Icon.Shield;\n    case \"SOFTWARE_LICENSE\":\n      return Icon.CodeBlock;\n    case \"SERVER\":\n    case \"SSH_KEY\":\n      return Icon.Terminal;\n    case \"WIRELESS_ROUTER\":\n      return Icon.Wifi;\n    default:\n      return Icon.Key;\n  }\n}\n\nexport function titleCaseWord(word: string) {\n  if (!word) return word;\n  return word[0].toUpperCase() + word.substr(1).toLowerCase();\n}\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAAiC,wBCAjC,IAAAC,EAAiD,wBAEjDC,EAA6B,yBAC7BC,EAA2B,cAC3BC,EAAoC,iBASvBC,EAAQ,IAAI,QAEZC,KACX,uBAAiC,EAAE,SACnC,CAAC,oBAAqB,sBAAsB,EAAE,KAAMC,MAAS,cAAWA,CAAI,CAAC,EAKxE,SAASC,EAAGC,EAAgB,CACjC,GAAIC,EAEF,SADe,gBAAaA,EAAUD,CAAI,EAC5B,SAAS,EAEzB,MAAM,MAAM,6BAA6B,CAC3C,CA+BO,SAASE,EAAWC,EAAc,CAClCC,EAAM,UACLD,GAAOC,EAAM,IAAID,CAAG,EACtBC,EAAM,OAAOD,CAAG,EAEhBC,EAAM,MAAM,CAAE,kBAAmB,EAAM,CAAC,EAG9C,CDhEA,eAAOC,GAAoC,CACzC,IAAMC,EAAQ,QAAM,aAAU,CAC5B,MAAO,QAAM,MAAM,SACnB,MAAO,mBACT,CAAC,EAED,GAAI,CACFC,EAAW,EACXC,EAAG,CAAC,UAAW,OAAO,CAAC,EACvBF,EAAM,MAAQ,QAAM,MAAM,QAC1BA,EAAM,MAAQ,eAChB,OAASG,EAAP,CACAH,EAAM,MAAQ,QAAM,MAAM,QAC1BA,EAAM,MAAQ,wBACVG,aAAiB,QACnBH,EAAM,QAAUG,EAAM,QAE1B,CACF",
  "names": ["reset_cache_exports", "__export", "resetCache", "__toCommonJS", "import_api", "import_api", "import_child_process", "import_fs", "import_react", "cache", "CLI_PATH", "path", "op", "args", "CLI_PATH", "clearCache", "key", "cache", "resetCache", "toast", "clearCache", "op", "error"]
}
